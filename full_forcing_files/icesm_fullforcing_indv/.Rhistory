time = seq(from = start, to = end, by = 1)
lat = matrix(data = NA, nrow = 1, ncol = nrec)
lon = matrix(data = NA, nrow = 1, ncol = nrec)
setwd("C:/Users/andre/Box Sync/Konecky Lab/User Storage/Andrew Flaim/Rcode/Iso2k") # Laptop
load("iso2k1_0_0.RData")
# Remove extraneous objects
rm(D, TS)
start = 1851
end = 1981
binvec =  seq(from = start, to = end, by = 1)
# Apply geoChronR function to extract primary TS
# SWBB
SWBB_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO96SWBB")][[1]]
lat[2] = SWBB_data$geo_latitude
lon[2] = SWBB_data$geo_longitude
SWBB_rec = na.omit(data.frame(year = SWBB_data$year,
val = SWBB_data$paleoData_values))
binned_SWBB = geoChronR::bin(SWBB_rec$year, SWBB_rec$val, binvec)
SWBB_anom = binned_SWBB$y-mean(na.omit(binned_SWBB$y))
# KUBE
KUBE_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO05KUBE")][[1]]
lat[1] = KUBE_data$geo_latitude
lon[1] = KUBE_data$geo_longitude
KUBE_rec = na.omit(data.frame(year = KUBE_data$year,
val = KUBE_data$paleoData_values))
binned_KUBE = geoChronR::bin(KUBE_rec$year, KUBE_rec$val, binvec)
KUBE_anom = binned_KUBE$y-mean(na.omit(binned_KUBE$y))
# LIRA
LIRA_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO04LIRA")][[1]]
lat[4] = LIRA_data$geo_latitude
lon[4] = LIRA_data$geo_longitude
LIRA_rec = na.omit(data.frame(year = LIRA_data$year,
val = LIRA_data$paleoData_values))
binned_LIRA = geoChronR::bin(LIRA_rec$year, LIRA_rec$val, binvec)
LIRA_anom = binned_LIRA$y-mean(na.omit(binned_LIRA$y))
# NUMP
NUMP_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO11NUPM")][[5]]
lat[5] = NUMP_data$geo_latitude
lon[5] = NUMP_data$geo_longitude
NUMP_rec = na.omit(data.frame(year = NUMP_data$year,
val = NUMP_data$paleoData_values))
binned_NUMP = geoChronR::bin(NUMP_rec$year, NUMP_rec$val, binvec)
NUMP_anom = binned_NUMP$y-mean(na.omit(binned_NUMP$y))
# COPM
COPM_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO03COPM")][[1]]
lat[6] = COPM_data$geo_latitude
lon[6] = COPM_data$geo_longitude
COPM_rec = na.omit(data.frame(year = COPM_data$year,
val = COPM_data$paleoData_values))
binned_COPM = geoChronR::bin(COPM_rec$year, COPM_rec$val, binvec)
COPM_anom = binned_COPM$y-mean(na.omit(binned_COPM$y))
# BOFP
BOFP_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO98BOFP")][[1]]
lat[7] = BOFP_data$geo_latitude
lon[7] = BOFP_data$geo_longitude
BOFP_rec = na.omit(data.frame(year = BOFP_data$year,
val = BOFP_data$paleoData_values))
binned_BOFP = geoChronR::bin(BOFP_rec$year, BOFP_rec$val, binvec)
BOFP_anom = binned_BOFP$y-mean(na.omit(binned_BOFP$y))
# KIPR
KIPR_data = sTS[which(pullTsVariable(sTS,
variable = "dataSetName") == "CO08KIPR")][[1]]
lat[3] = KIPR_data$geo_latitude
lon[3] = KIPR_data$geo_longitude
KIPR_rec = na.omit(data.frame(year = KIPR_data$year,
val = KIPR_data$paleoData_values))
binned_KIPR = geoChronR::bin(KIPR_rec$year, KIPR_rec$val, binvec)
KIPR_anom = binned_KIPR$y-mean(na.omit(binned_KIPR$y))
#
#### Preparing data ####
# 2.1 Convert Lats and Lons to standard format (if they aren't already).
# Enter your coordinates here:
# make sure there are no negative-longitude coordinates: [0 to 360] only.
# longitude
for (i in 1:nrec){
if (lon[i] < 0.){
lon[i] = lon[i]+360.
}
# latitude
if (lat[i]>90.){
lat[i] = lat[i]-90.
}
}
# 2.2 Ensure that Sea-Surface Temperature is in degrees C, not Kelvin.
temp_flag = any(sst>200)
for (i in 1:nrec){
for (j in 1:length(time)){
if (temp_flag){
sst[i, j] = sst[i, j]-274.15
}
}
}
#### Assign beta values ####
b1=0.3007062
b2=0.2619054
b3=0.436509
b4=0.1552032
b5=0.15
V_corr = 0.97002
slope1 = V_corr*b1      # Red Sea
slope2 = V_corr*b2      # Tropical Pacific
slope3 = V_corr*b3      # South Pacific
slope4 = V_corr*b4      # Indian Ocean
slope5 = V_corr*b5      # Tropical Atlantic
# Given Lat/Lon pair, assign correct value to 'b'
b = matrix(data = NA, nrow = 1, ncol = nrec)
for (i in 1:nrec){
if (lon[i]>=32.83 & lon[i]<=43.5 & lat[i]>=12.38 & lat[i]<=28.5){
b[i] = slope1 #Red Sea
} else if (lon[i]<=120.){
b[i] = slope4 #Indian Ocean
} else if (lon[i]>=270. & lat[i]>=10.){
b[i] = slope5 #Tropical Atlantic ~300 E longitude
} else if (lat[i]> -5. & lat[i]<=13.){
b[i] = slope2 #Tropical Pacific
} else if (lat[i]<= -5.){
b[i] = slope3 #South Pacific
} else{
b[i] = slope2 #Default = Trop. Pacific.
}
}
#### PSM ####
a = -0.22
coral = matrix(data = NA, nrow = 130, ncol = nrec)
for (i in 1:nrec){
for (j in 1:length(time)){
coral[j, i] = a*sst[j, i] + b[i]*sss[j, i]
}
}
b
#### Import iCESM data ####
nrec = 7
setwd("~/GitHub/iso-project/full_forcing_files/icesm_fullforcing_indv")
iKUBE_1 = read.csv("iKUBE_1.csv", head = T)
iKUBE_2 = read.csv("iKUBE_2.csv", head = T)
iKUBE_3 = read.csv("iKUBE_3.csv", head = T)
iKUBE_1 = iKUBE_1[12:1572,]
iKUBE_2 = iKUBE_2[12:1572,]
iKUBE_3 = iKUBE_3[12:1572,]
iKUBE_1_sss = iKUBE_1[,2]
iKUBE_2_sss = iKUBE_2[,2]
iKUBE_3_sss = iKUBE_3[,2]
iKUBE_1_sst = iKUBE_1[,3]
iKUBE_2_sst = iKUBE_2[,3]
iKUBE_3_sst = iKUBE_3[,3]
#### Bin sst and sss ####
start_bin = 1851
end_bin = 1981
time_bin = seq(from = start_bin, to = end_bin, by = 1)
# Binned sst anomaly matrix
sst_binned = matrix(data = NA, nrow = 130, ncol = 3)
# Bin KUBE_1_sst
binvec = seq(from = start_bin, to = end_bin, by = 1/12)
iKUBE_1_sst_thisrec = na.omit(data.frame(year = binvec, val = iKUBE_1_sst))
iKUBE_1_sst_bin = geoChronR::bin(iKUBE_1_sst_thisrec$year,
iKUBE_1_sst_thisrec$val, time_bin)
sst_binned[,1] = iKUBE_1_sst_bin$y - mean(iKUBE_1_sst_bin$y)
# Bin KUBE_2_sst
iKUBE_2_sst_thisrec = na.omit(data.frame(year = binvec, val = iKUBE_2_sst))
iKUBE_2_sst_bin = geoChronR::bin(iKUBE_2_sst_thisrec$year,
iKUBE_2_sst_thisrec$val, time_bin)
sst_binned[,2] = iKUBE_2_sst_bin$y - mean(iKUBE_2_sst_bin$y)
# Bin KUBE_1_sst
iKUBE_3_sst_thisrec = na.omit(data.frame(year = binvec, val = iKUBE_3_sst))
iKUBE_3_sst_bin = geoChronR::bin(iKUBE_3_sst_thisrec$year,
iKUBE_3_sst_thisrec$val, time_bin)
sst_binned[,3] = iKUBE_3_sst_bin$y - mean(iKUBE_3_sst_bin$y)
# Binned sss anomaly matrix
sss_binned = matrix(data = NA, nrow = 130, ncol = 3)
# Bin KUBE_1_sss
binvec = seq(from = start_bin, to = end_bin, by = 1/12)
iKUBE_1_sss_thisrec = na.omit(data.frame(year = binvec, val = iKUBE_1_sss))
iKUBE_1_sss_bin = geoChronR::bin(iKUBE_1_sss_thisrec$year,
iKUBE_1_sss_thisrec$val, time_bin)
sss_binned[,1] = iKUBE_1_sss_bin$y - mean(iKUBE_1_sss_bin$y)
# Bin KUBE_2_sss
iKUBE_2_sss_thisrec = na.omit(data.frame(year = binvec, val = iKUBE_2_sss))
iKUBE_2_sss_bin = geoChronR::bin(iKUBE_2_sss_thisrec$year,
iKUBE_2_sss_thisrec$val, time_bin)
sss_binned[,2] = iKUBE_2_sss_bin$y - mean(iKUBE_2_sss_bin$y)
# Bin KUBE_3_sss
iKUBE_3_sss_thisrec = na.omit(data.frame(year = binvec, val = iKUBE_3_sss))
iKUBE_3_sss_bin = geoChronR::bin(iKUBE_3_sss_thisrec$year,
iKUBE_3_sss_thisrec$val, time_bin)
sss_binned[,3] = iKUBE_3_sss_bin$y - mean(iKUBE_3_sss_bin$y)
#### PSMs ####
# Time dimension
start = 1851
end = 1980
time = seq(from = start, to = end, by = 1)
a = -0.22
b = 0.145503
KUBE_ensemble = matrix(data = NA, nrow = 130, ncol = 3)
for (i in 1:3){
for (j in 1:length(time)){
KUBE_ensemble[j, i] = a*sst_binned[j, i] + b*sss_binned[j, i]
}
}
KUBE_ensemble_mean = rowMeans(KUBE_ensemble)
#### Import iCESM data ####
nrec = 7
setwd("~/GitHub/iso-project/full_forcing_files/icesm_fullforcing_indv")
iKIPR_1 = read.csv("iKIPR_1.csv", head = T)
iKIPR_2 = read.csv("iKIPR_2.csv", head = T)
iKIPR_3 = read.csv("iKIPR_3.csv", head = T)
iKIPR_1 = iKIPR_1[12:1572,]
iKIPR_2 = iKIPR_2[12:1572,]
iKIPR_3 = iKIPR_3[12:1572,]
iKIPR_1_sss = iKIPR_1[,2]
iKIPR_2_sss = iKIPR_2[,2]
iKIPR_3_sss = iKIPR_3[,2]
iKIPR_1_sst = iKIPR_1[,3]
iKIPR_2_sst = iKIPR_2[,3]
iKIPR_3_sst = iKIPR_3[,3]
#### Bin sst and sss ####
start_bin = 1851
end_bin = 1981
time_bin = seq(from = start_bin, to = end_bin, by = 1)
# Binned sst anomaly matrix
sst_binned = matrix(data = NA, nrow = 130, ncol = 3)
# Bin KIPR_1_sst
binvec = seq(from = start_bin, to = end_bin, by = 1/12)
iKIPR_1_sst_thisrec = na.omit(data.frame(year = binvec, val = iKIPR_1_sst))
iKIPR_1_sst_bin = geoChronR::bin(iKIPR_1_sst_thisrec$year,
iKIPR_1_sst_thisrec$val, time_bin)
sst_binned[,1] = iKIPR_1_sst_bin$y - mean(iKIPR_1_sst_bin$y)
# Bin KIPR_2_sst
iKIPR_2_sst_thisrec = na.omit(data.frame(year = binvec, val = iKIPR_2_sst))
iKIPR_2_sst_bin = geoChronR::bin(iKIPR_2_sst_thisrec$year,
iKIPR_2_sst_thisrec$val, time_bin)
sst_binned[,2] = iKIPR_2_sst_bin$y - mean(iKIPR_2_sst_bin$y)
# Bin KIPR_1_sst
iKIPR_3_sst_thisrec = na.omit(data.frame(year = binvec, val = iKIPR_3_sst))
iKIPR_3_sst_bin = geoChronR::bin(iKIPR_3_sst_thisrec$year,
iKIPR_3_sst_thisrec$val, time_bin)
sst_binned[,3] = iKIPR_3_sst_bin$y - mean(iKIPR_3_sst_bin$y)
# Binned sss anomaly matrix
sss_binned = matrix(data = NA, nrow = 130, ncol = 3)
# Bin KIPR_1_sss
binvec = seq(from = start_bin, to = end_bin, by = 1/12)
iKIPR_1_sss_thisrec = na.omit(data.frame(year = binvec, val = iKIPR_1_sss))
iKIPR_1_sss_bin = geoChronR::bin(iKIPR_1_sss_thisrec$year,
iKIPR_1_sss_thisrec$val, time_bin)
sss_binned[,1] = iKIPR_1_sss_bin$y - mean(iKIPR_1_sss_bin$y)
# Bin KIPR_2_sss
iKIPR_2_sss_thisrec = na.omit(data.frame(year = binvec, val = iKIPR_2_sss))
iKIPR_2_sss_bin = geoChronR::bin(iKIPR_2_sss_thisrec$year,
iKIPR_2_sss_thisrec$val, time_bin)
sss_binned[,2] = iKIPR_2_sss_bin$y - mean(iKIPR_2_sss_bin$y)
# Bin KIPR_3_sss
iKIPR_3_sss_thisrec = na.omit(data.frame(year = binvec, val = iKIPR_3_sss))
iKIPR_3_sss_bin = geoChronR::bin(iKIPR_3_sss_thisrec$year,
iKIPR_3_sss_thisrec$val, time_bin)
sss_binned[,3] = iKIPR_3_sss_bin$y - mean(iKIPR_3_sss_bin$y)
#### PSMs ####
# Time dimension
start = 1851
end = 1980
time = seq(from = start, to = end, by = 1)
a = -0.22
b = 0.145503
KIPR_ensemble = matrix(data = NA, nrow = 130, ncol = 3)
for (i in 1:3){
for (j in 1:length(time)){
KIPR_ensemble[j, i] = a*sst_binned[j, i] + b*sss_binned[j, i]
}
}
KIPR_ensemble_mean = rowMeans(KIPR_ensemble)
#### Plot PSM output ####
for(i in 1:3){
plot(time, KIPR_ensemble[,i], type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F)
par(new = T)
}
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3)
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "KIPR Pseudocorals")
library(geoChronR)
library(magrittr)
library(tidyverse)
library(lubridate)
library(rgdal)
library(ncdf4)
library(ncdf4.helpers)
#
#### Import iCESM data ####
nrec = 7
setwd("~/GitHub/iso-project/full_forcing_files/icesm_fullforcing_indv")
iSWBB_1 = read.csv("iSWBB_1.csv", head = T)
iSWBB_2 = read.csv("iSWBB_2.csv", head = T)
iSWBB_3 = read.csv("iSWBB_3.csv", head = T)
iSWBB_1 = iSWBB_1[12:1572,]
iSWBB_2 = iSWBB_2[12:1572,]
iSWBB_3 = iSWBB_3[12:1572,]
iSWBB_1_sss = iSWBB_1[,2]
iSWBB_2_sss = iSWBB_2[,2]
iSWBB_3_sss = iSWBB_3[,2]
iSWBB_1_sst = iSWBB_1[,3]
iSWBB_2_sst = iSWBB_2[,3]
iSWBB_3_sst = iSWBB_3[,3]
#### Bin sst and sss ####
start_bin = 1851
end_bin = 1981
time_bin = seq(from = start_bin, to = end_bin, by = 1)
# Binned sst anomaly matrix
sst_binned = matrix(data = NA, nrow = 130, ncol = 3)
# Bin SWBB_1_sst
binvec = seq(from = start_bin, to = end_bin, by = 1/12)
iSWBB_1_sst_thisrec = na.omit(data.frame(year = binvec, val = iSWBB_1_sst))
iSWBB_1_sst_bin = geoChronR::bin(iSWBB_1_sst_thisrec$year,
iSWBB_1_sst_thisrec$val, time_bin)
sst_binned[,1] = iSWBB_1_sst_bin$y - mean(iSWBB_1_sst_bin$y)
# Bin SWBB_2_sst
iSWBB_2_sst_thisrec = na.omit(data.frame(year = binvec, val = iSWBB_2_sst))
iSWBB_2_sst_bin = geoChronR::bin(iSWBB_2_sst_thisrec$year,
iSWBB_2_sst_thisrec$val, time_bin)
sst_binned[,2] = iSWBB_2_sst_bin$y - mean(iSWBB_2_sst_bin$y)
# Bin SWBB_1_sst
iSWBB_3_sst_thisrec = na.omit(data.frame(year = binvec, val = iSWBB_3_sst))
iSWBB_3_sst_bin = geoChronR::bin(iSWBB_3_sst_thisrec$year,
iSWBB_3_sst_thisrec$val, time_bin)
sst_binned[,3] = iSWBB_3_sst_bin$y - mean(iSWBB_3_sst_bin$y)
# Binned sss anomaly matrix
sss_binned = matrix(data = NA, nrow = 130, ncol = 3)
# Bin SWBB_1_sss
binvec = seq(from = start_bin, to = end_bin, by = 1/12)
iSWBB_1_sss_thisrec = na.omit(data.frame(year = binvec, val = iSWBB_1_sss))
iSWBB_1_sss_bin = geoChronR::bin(iSWBB_1_sss_thisrec$year,
iSWBB_1_sss_thisrec$val, time_bin)
sss_binned[,1] = iSWBB_1_sss_bin$y - mean(iSWBB_1_sss_bin$y)
# Bin SWBB_2_sss
iSWBB_2_sss_thisrec = na.omit(data.frame(year = binvec, val = iSWBB_2_sss))
iSWBB_2_sss_bin = geoChronR::bin(iSWBB_2_sss_thisrec$year,
iSWBB_2_sss_thisrec$val, time_bin)
sss_binned[,2] = iSWBB_2_sss_bin$y - mean(iSWBB_2_sss_bin$y)
# Bin SWBB_3_sss
iSWBB_3_sss_thisrec = na.omit(data.frame(year = binvec, val = iSWBB_3_sss))
iSWBB_3_sss_bin = geoChronR::bin(iSWBB_3_sss_thisrec$year,
iSWBB_3_sss_thisrec$val, time_bin)
sss_binned[,3] = iSWBB_3_sss_bin$y - mean(iSWBB_3_sss_bin$y)
#### PSMs ####
# Time dimension
start = 1851
end = 1980
time = seq(from = start, to = end, by = 1)
a = -0.22
b = 0.145503
SWBB_ensemble = matrix(data = NA, nrow = 130, ncol = 3)
for (i in 1:3){
for (j in 1:length(time)){
SWBB_ensemble[j, i] = a*sst_binned[j, i] + b*sss_binned[j, i]
}
}
SWBB_ensemble_mean = rowMeans(SWBB_ensemble)
#### Plot PSM output ####
for(i in 1:3){
plot(time, SWBB_ensemble[,i], type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F)
par(new = T)
}
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3)
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "SWBB Pseudocorals")
rec_col = c("blue", "red", "dark green", "purple", "black", "orange", "brown")
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[,2])
par(new = T)
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[,3])
par(new = T)
plot(time, LIRA_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[,4])
par(new = T)
plot(time, COPM_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[,6])
par(new = T)
plot(time, BOFP_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[,7])
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Emsemble Means")
rec_col = c("blue", "red", "dark green", "purple", "black", "orange", "brown")
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[2])
par(new = T)
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[3])
par(new = T)
plot(time, LIRA_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[4])
par(new = T)
plot(time, COPM_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[6])
par(new = T)
plot(time, BOFP_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 3, col = rec_col[7])
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Emsemble Means")
rec_col = c("blue", "red", "dark green", "purple", "black", "orange", "brown")
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[2])
par(new = T)
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[3])
par(new = T)
plot(time, LIRA_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[4])
par(new = T)
plot(time, COPM_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[6])
par(new = T)
plot(time, BOFP_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[7])
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Emsemble Means")
rec_col = c("blue", "red", "dark green", "purple", "black", "orange", "brown")
rec_col_temp = c("red", "dark green", "purple", "orange", "brown")
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[2])
par(new = T)
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[3])
par(new = T)
plot(time, LIRA_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[4])
par(new = T)
plot(time, COPM_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[6])
par(new = T)
plot(time, BOFP_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[7])
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Emsemble Means")
legend("topright", col = rec_col,
legend = c("SWBB", "KIPR", "LIRA", "COPM", "BOFP"),
lty = rep(1, 3))
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[2])
par(new = T)
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[3])
par(new = T)
plot(time, LIRA_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[4])
par(new = T)
plot(time, COPM_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[6])
par(new = T)
plot(time, BOFP_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[7])
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Emsemble Means")
legend("topright", col = rec_col,
legend = c("SWBB", "KIPR", "LIRA", "COPM", "BOFP"),
lty = rep(1, 3))
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[2])
legend("topright", col = rec_col_temp,
legend = c("SWBB", "KIPR", "LIRA", "COPM", "BOFP"),
lty = rep(1, 3))
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Emsemble Means")
legend("topright", col = rec_col_temp,
legend = c("SWBB", "KIPR", "LIRA", "COPM", "BOFP"),
lty = rep(1, 3))
plot(time, SWBB_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[2])
par(new = T)
plot(time, KIPR_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[3])
par(new = T)
plot(time, LIRA_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[4])
par(new = T)
plot(time, COPM_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[6])
par(new = T)
plot(time, BOFP_ensemble_mean, type = "l", frame.plot = F, ylim = c(-0.4,0.4),
xlab = "", ylab = "", axes = F, lwd = 2, col = rec_col[7])
par(new = T)
plot(NA, frame.plot = F, ylim = c(-0.4,0.4), xlim = c(min(time), max(time)),
ylab = "Pseudo d18O anomalies", xlab = "Years (CE)", axes = T,
main = "Pseudocoral Ensemble Means")
1+2+3+3+5+6
/6
20/6
24/6
1+2+3+4+5+6
/6
21/6
